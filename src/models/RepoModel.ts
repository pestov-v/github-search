import { types } from 'mobx-state-tree';

const LicenseModel = types.model('LicenseModel', {
  key: types.maybeNull(types.string),
  name: types.maybeNull(types.string),
  node_id: types.maybeNull(types.string),
  spdx_id: types.maybeNull(types.string),
  url: types.maybeNull(types.string),
});
export const RepoModel = types.model('RepoModel', {
  id: types.number,
  node_id: types.string,
  name: types.string,
  full_name: types.string,
  private: types.boolean,
  html_url: types.string,
  description: types.maybeNull(types.string),
  fork: types.boolean,
  url: types.string,
  forks_url: types.string,
  keys_url: types.string,
  collaborators_url: types.string,
  teams_url: types.string,
  hooks_url: types.string,
  issue_events_url: types.string,
  events_url: types.string,
  assignees_url: types.string,
  branches_url: types.string,
  tags_url: types.string,
  blobs_url: types.string,
  git_tags_url: types.string,
  git_refs_url: types.string,
  trees_url: types.string,
  statuses_url: types.string,
  languages_url: types.string,
  stargazers_url: types.string,
  contributors_url: types.string,
  subscribers_url: types.string,
  subscription_url: types.string,
  commits_url: types.string,
  git_commits_url: types.string,
  comments_url: types.string,
  issue_comment_url: types.string,
  contents_url: types.string,
  compare_url: types.string,
  merges_url: types.string,
  archive_url: types.string,
  downloads_url: types.string,
  issues_url: types.string,
  pulls_url: types.string,
  milestones_url: types.string,
  notifications_url: types.string,
  labels_url: types.string,
  releases_url: types.string,
  deployments_url: types.string,
  created_at: types.string,
  updated_at: types.string,
  pushed_at: types.string,
  git_url: types.string,
  ssh_url: types.string,
  clone_url: types.string,
  svn_url: types.string,
  homepage: types.maybeNull(types.string),
  size: types.number,
  stargazers_count: types.number,
  watchers_count: types.number,
  language: types.maybeNull(types.string),
  has_issues: types.boolean,
  has_projects: types.boolean,
  has_downloads: types.boolean,
  has_wiki: types.boolean,
  has_pages: types.boolean,
  forks_count: types.number,
  mirror_url: types.maybeNull(types.string),
  archived: types.boolean,
  disabled: types.boolean,
  open_issues_count: types.number,
  license: types.maybeNull(LicenseModel),
  allow_forking: types.boolean,
  is_template: types.boolean,
  topics: types.array(types.string),
  visibility: types.string,
  forks: types.number,
  open_issues: types.number,
  watchers: types.number,
  default_branch: types.string,
});
